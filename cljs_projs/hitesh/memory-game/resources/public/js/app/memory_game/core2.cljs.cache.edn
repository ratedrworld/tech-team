{:rename-macros {}, :renames {}, :externs {document {getElementById {}}, Object {value {}, disabled {}}}, :use-macros {}, :excludes #{}, :name memory-game.core2, :imports nil, :requires {string clojure.string, clojure.string clojure.string}, :cljs.spec/speced-vars [], :uses nil, :defs {board {:name memory-game.core2/board, :file "src/cljs/memory_game/core2.cljs", :line 4, :column 1, :end-line 4, :end-column 11, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 4, :column 6, :end-line 4, :end-column 11}, :tag cljs.core/IMap}, get-map {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 21, :column 7, :end-line 21, :end-column 14, :arglists (quote ([])), :doc "reads input from DOM"}, :name memory-game.core2/get-map, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 14, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "reads input from DOM"}, check {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 28, :column 7, :end-line 28, :end-column 12, :arglists (quote ([lis])), :doc "check if two open are equal or not"}, :name memory-game.core2/check, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 12, :method-params ([lis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lis])), :doc "check if two open are equal or not"}, splitter {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 33, :column 7, :end-line 33, :end-column 15, :arglists (quote ([x]))}, :name memory-game.core2/splitter, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 15, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :end-line 33, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, filter-list {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 36, :column 7, :end-line 36, :end-column 18, :arglists (quote ([lis])), :doc "removes the empty and already checked correct options"}, :name memory-game.core2/filter-list, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 18, :method-params ([lis]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([lis])), :doc "removes the empty and already checked correct options"}, change-open {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 44, :column 7, :end-line 44, :end-column 18, :arglists (quote ([a])), :doc "Switches value of :open"}, :name memory-game.core2/change-open, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 18, :method-params ([a]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([a])), :doc "Switches value of :open"}, swapping {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 67, :column 7, :end-line 67, :end-column 15, :arglists (quote ([num])), :doc "Gives the valid ans after swapping"}, :name memory-game.core2/swapping, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 15, :method-params ([num]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 1, :fn-var true, :arglists (quote ([num])), :doc "Gives the valid ans after swapping"}, valid? {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 81, :column 7, :end-line 81, :end-column 13, :arglists (quote ([arr])), :doc "Checks whether the number is valid or not"}, :name memory-game.core2/valid?, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 13, :method-params ([arr]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 81, :end-line 81, :max-fixed-arity 1, :fn-var true, :arglists (quote ([arr])), :doc "Checks whether the number is valid or not"}, part-add {:protocol-inline nil, :meta {:file "/home/hitesh/tech-team/cljs_projs/hitesh/memory-game/src/cljs/memory_game/core2.cljs", :line 88, :column 7, :end-line 88, :end-column 15, :arglists (quote ([part]))}, :name memory-game.core2/part-add, :variadic false, :file "src/cljs/memory_game/core2.cljs", :end-column 15, :method-params ([part]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 88, :end-line 88, :max-fixed-arity 1, :fn-var true, :arglists (quote ([part]))}}, :cljs.spec/registry-ref [], :require-macros nil, :cljs.analyzer/constants {:seen #{:open :done :val}, :order [:val :open :done]}, :doc nil}