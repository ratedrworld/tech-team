{:rename-macros {}, :renames {}, :externs {Error {}, document {getElementById {}}, Object {disabled {}, value {}}, window {setTimeout {}}}, :use-macros {}, :excludes #{}, :name memory-game.core, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {make-rand-arr {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 8, :column 7, :end-line 8, :end-column 20, :arglists (quote ([n]))}, :name memory-game.core/make-rand-arr, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 20, :method-params ([n]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 8, :end-line 8, :max-fixed-arity 1, :fn-var true, :arglists (quote ([n]))}, make-board {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 15, :column 7, :end-line 15, :end-column 17, :arglists (quote ([n] [board rand-arr pos])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [board rand-arr pos]), :arglists ([n] [board rand-arr pos]), :arglists-meta (nil nil)}}, :name memory-game.core/make-board, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 17, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([n] [board rand-arr pos]), :arglists ([n] [board rand-arr pos]), :arglists-meta (nil nil)}, :method-params ([n] [board rand-arr pos]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 3, :fn-var true, :arglists ([n] [board rand-arr pos])}, board {:name memory-game.core/board, :file "src/cljs/memory_game/core.cljs", :line 25, :column 1, :end-line 25, :end-column 11, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 25, :column 6, :end-line 25, :end-column 11}, :tag any}, disable {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 27, :column 7, :end-line 27, :end-column 14, :arglists (quote ([id1 id2]))}, :name memory-game.core/disable, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 14, :method-params ([id1 id2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id1 id2]))}, clear {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 35, :column 7, :end-line 35, :end-column 12, :arglists (quote ([id1 id2]))}, :name memory-game.core/clear, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 12, :method-params ([id1 id2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 35, :end-line 35, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id1 id2]))}, check {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 47, :column 7, :end-line 47, :end-column 12, :arglists (quote ([id1 id2]))}, :name memory-game.core/check, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 12, :method-params ([id1 id2]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 2, :fn-var true, :arglists (quote ([id1 id2]))}, -main {:protocol-inline nil, :meta {:file "/home/bhavesh/tech-team/cljs_projs/bhavesh/memory-game/src/cljs/memory_game/core.cljs", :line 60, :column 7, :end-line 60, :end-column 12, :arglists (quote ([id])), :doc "I don't do a whole lot ... yet."}, :name memory-game.core/-main, :variadic false, :file "src/cljs/memory_game/core.cljs", :end-column 12, :method-params ([id]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([id])), :doc "I don't do a whole lot ... yet."}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}