(ns noob2pro.bhavesh.test
  (:require  [clojure.test :as t]
             [expectations :as expect]
             [noob2pro.bhavesh.core :refer :all]))


;; new test cases

;; first problem, multiples of 3 and 5 below 1000

(expect/expect 233168 (sum-multiples 3 5 1000))

(expect/expect 78 (sum-multiples 3 5 20))

(expect/expect 110110 (sum-multiples 7 11 1000))

;; second problem, sum of even-valued terms in fibonacci below 4 million
(expect/expect 4613732 (fib-sum 4000000))


;;third problem, palindrome

(expect/expect true (palin? 44))

(expect/expect false (palin? 998001))

(expect/expect 906609 (prob3))



(expect/expect 5 (larg-prime-factor 15))

(expect/expect 5 (gcd 10 5))

(expect/expect 1 (gcd 5 7))

(expect/expect 2520 (lcm-arr (range 1 11)))

(expect/expect nil (isprime? 17))

(expect/expect true (isprime? 35))

;;pythagorean


(expect/expect 60 (pyth 12))

(expect/expect 31875000 (pyth 1000))


(def num8 73167176531330624919225119674426574742355349194934969835203127745063262395783180169848018694788518438586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557668966489504452445231617318564030987111217223831136222989342338030813533627661428280644448664523874930358907296290491560440772390713810515859307960866701724271218839987979087922749219016997208880937766572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397536978179778461740649551492908625693219784686224828397224137565705605749026140797296865241453510047482166370484403199890008895243450658541227588666881164271714799244429282308634656748139191231628245861786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408071984038509624554443629812309878799272442849091888458015616609791913387549920052406368991256071760605886116467109405077541002256983155200055935729725716362695618826704282524836008232575304207529634)

(expect/expect 23514624000 (prob8 13 num8))



(expect/expect [10 1 2 5] (n-divisors 10))


(expect/expect 89.5 (atm "problem1"))

(expect/expect 4 (inputs-div-k "problem2"))


(expect/expect '(0 14 24 253 5861 2183837) (prob3-cc))

(expect/expect [1 0 2 0 3] (my-interpose [1 2 3]))

(expect/expect [1 2 4 5 7 8] (drop-nth [1 2 3 4 5 6 7 8 9] 3))

(expect/expect '((1 3 5) '(2 4 6) (rev-interleave [1 2 3 4 5 6] 2)))

(expect/expect '((1 4 7) (2 5 8) (3 6 9)) (rev-interleave [1 2 3 4 5 6 7 8 9] 3))


(expect/expect [3 4 5 1 2] (rotate 2 [1 2 3 4 5]))

(expect/expect [4 5 1 2 3] (rotate -2 [1 2 3 4 5]))

(expect/expect [1 2 3 4 5] (rotate 5 [1 2 3 4 5]))


(expect/expect "M. Gandhi" (trim-string ["mohandas" "gandhi"]))



(expect/expect "M. K. Gandhi" (trim-string ["moHandas" "karamchand" "gandhi"]))
